from flask import Flask, render_template, redirect, request
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime


app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///test.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)


class Grocery(db.Model):
    """–ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –≤ –ë–î"""
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)
    added = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)

    def __repr__(self):
        """–ö–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–ø—Ä–æ—Å, –ë–î –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –æ–±—ä–µ–∫—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
        return self.name


@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':  # –µ—Å–ª–∏ —Ñ–æ—Ä–º—É –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∏ –Ω–∞–∂–∞–ª–∏ "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å"
        name = request.form['name']  # –∏–∑ –ø–æ–ª—è name —Ñ–æ—Ä–º—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é name
        new_item = Grocery(name=name)  # —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –ë–î

        try:  # –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å üêãüí®üåä
            db.session.add(new_item)  # –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –ë–î üêãüí®üåä
            db.session.commit()  # –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è üêãüí®üåä
            return redirect('/')  # –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É üêãüí®üåä
        except:  # –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏ üêãüí®üåä
            return 'There was a problem adding new item!'
    else:
        groceries = Grocery.query.order_by(Grocery.added).all()
        return render_template('index.html', groceries=groceries)


@app.route('/delete/<int:id>')
def delete(id):
    grocery = Grocery.query.get_or_404(id)

    try:
        db.session.delete(grocery)
        db.session.commit()
        return redirect('/')
    except:
        return 'There was a problem deleting item.'


@app.route('/update/<int:id>', methods=['GET', 'POST'])
def update(id):
    grocery = Grocery.query.get_or_404(id)
    
    if request.method == 'POST':
        grocery.name = request.form['name']
        
        try:
            db.session.commit()
            return redirect('/')
        except:
            return 'There was a problem updating data.'
    else:
        title = 'Update data'
        return render_template('update.html', title=title, grocery=grocery)


if __name__ == '__main__':
    app.run(debug=True)
